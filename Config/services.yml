parameters:
    # bbapp parameters, somes will be set at init of container by BBApplication
    bbapp.locale: 'fr_FR'
    translator.fallback: 'fr'

    # bbapp classes
    bbapp.cachebootstrap.class: BackBuilder\Cache\File\Cache
    bbapp.cachecontrol.class: BackBuilder\Cache\DAO\Cache
    bbapp.config.class: BackBuilder\Config\Config
    bbapp.logger.class: BackBuilder\Logging\Logger
    bbapp.logger_debug.class: BackBuilder\Logging\DebugStackLogger
    bbapp.securitycontext.class: BackBuilder\Security\SecurityContext
    bbapp.controller.class: BackBuilder\FrontController\FrontController
    bbapp.renderer.class: BackBuilder\Renderer\Renderer
    bbapp.ed.class: BackBuilder\Event\Dispatcher
    bbapp.rpcserver.class: BackBuilder\Services\Rpc\JsonRPCServer
    bbapp.uploadserver.class: BackBuilder\Services\Upload\UploadServer
    bbapp.urlgenerator.class: BackBuilder\Rewriting\UrlGenerator
    bbapp.translator.class: BackBuilder\Translation\Translator
    bbapp.routing.class: BackBuilder\Routing\RouteCollection
    bbapp.pagebuilder.class: BackBuilder\NestedNode\Builder\PageBuilder
    bbapp.registry.class: Symfony\Component\HttpFoundation\ParameterBag
    bbapp.autoloader.class: BackBuilder\AutoLoader\AutoLoader
    bbapp.keywordbuilder.class: BackBuilder\NestedNode\Builder\KeywordBuilder
    bbapp.controller_resolver.class: BackBuilder\Controller\ControllerResolver

    bbapp.script.command: php
    bbapp.console.command: bin/console.php

    bbapp.rest.hydrator.class: BackBuilder\Rest\Hydration\RestHydrator
    bbapp.rest.encoder_provider.class: BackBuilder\Rest\Encoder\ContainerEncoderProvider
    bbapp.rest.encoder_json.class: Symfony\Component\Serializer\Encoder\JsonEncoder
    bbapp.rest.encoder_xml.class: Symfony\Component\Serializer\Encoder\XmlEncoder

    bbapp.rest.listener_validation.class: BackBuilder\Rest\EventListener\ValidationListener
    bbapp.rest.listener_body.class: BackBuilder\Rest\EventListener\BodyListener
    bbapp.rest.listener_exception.class: BackBuilder\Rest\EventListener\ExceptionListener
    bbapp.rest.listener_exception.mapping:
        Exception:
            code: 500
        Symfony\Component\Security\Core\Exception\ProviderNotFoundException:
            code: 401
            message: Authentication failed - supplied public key or signature is incorrect
        Doctrine\ORM\ORMException:
            code: 500
        Symfony\Component\Security\Core\Exception\AuthenticationCredentialsNotFoundException:
            code: 401
            message: Authenticaton failed - public key not provided


    bbapp.rest_api.path: /rest/

    bbapp.rest.test_controller.class: BackBuilder\Rest\Controller\TestController

    bbapp.toolbar.listener.class: BackBuilder\Profiler\EventListener\ToolbarListener
    bbapp.profiler.listener.class: BackBuilder\Event\Listener\ProfilerListener

    bbapp.dbal.logger.profiling.class: BackBuilder\Logging\DebugStackLogger

    # data collectors
    bbapp.collector.config.class: BackBuilder\Profiler\DataCollector\ConfigDataCollector
    bbapp.collector.request.class: Symfony\Component\HttpKernel\DataCollector\RequestDataCollector
    bbapp.collector.exception.class: Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector
    bbapp.collector.events.class: Symfony\Component\HttpKernel\DataCollector\EventDataCollector
    bbapp.collector.logger.class: Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector
    bbapp.collector.time.class: Symfony\Component\HttpKernel\DataCollector\TimeDataCollector
    bbapp.collector.memory.class: Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector
    bbapp.collector.routing.class: BackBuilder\Profiler\DataCollector\RoutingDataCollector
    bbapp.collector.doctrine.class: BackBuilder\Profiler\DataCollector\DoctrineDataCollector

    bbapp.job.queue.registry.class: BackBuilder\Job\Queue\RegistryQueue

    data_collector.templates:
        config: "%bbapp.base.dir%/Resources/scripts/Collector/config.html.twig"
        request: "%bbapp.base.dir%/Resources/scripts/Collector/request.html.twig"
        exception: "%bbapp.base.dir%/Resources/scripts/Collector/exception.html.twig"
        events: "%bbapp.base.dir%/Resources/scripts/Collector/events.html.twig"
        logger: "%bbapp.base.dir%/Resources/scripts/Collector/logger.html.twig"
#        time: "%bbapp.base.dir%/Resources/scripts/Collector/time.html.twig"
        memory: "%bbapp.base.dir%/Resources/scripts/Collector/memory.html.twig"
        routing: "%bbapp.base.dir%/Resources/scripts/Collector/routing.html.twig"
        db: "%bbapp.base.dir%/Resources/scripts/Collector/db.html.twig"

    bbapp.analytics.class: BackBuilder\Application\Analytics

    config.yml_files_to_ignore: ['services', 'bootstrap']

    bbapp.config.configurator.class: BackBuilder\Config\Configurator
    bbapp.config.persistor.class: BackBuilder\Config\Persistor
    bbapp.bundle.loader.class: BackBuilder\Bundle\BundleLoader

services:
    cache.bootstrap:
        class:      %bbapp.cachebootstrap.class%
        arguments:  [{cachedir: "%bbapp.cache.dir%", cacheautogenerate: "%bbapp.cache.autogenerate%"}, "%bbapp.context%"]
    cache.control:
        class:      %bbapp.cachecontrol.class%
        arguments:  [{em: "@em"}, "%bbapp.context%", "@logging"]
    config:
        class:      %bbapp.config.class%
        arguments:  ["%bbapp.base.dir%/Config", "@cache.bootstrap", null, "%debug%", "%config.yml_files_to_ignore%"]
        tags:
            - { name: "dumpable", dispatch_event: false }
        calls:
            - [setContainer, ['@service_container']]
            - [setEnvironment, ['%bbapp.environment%']]
        configurator: ["@config.configurator", configureApplicationConfig]
    event.dispatcher:
        class:      %bbapp.ed.class%
        arguments:  ["@bbapp", "@config"]
        tags:
            - { name: "dumpable", dispatch_event: false }
    ed:
        alias: event.dispatcher
    security.context:
        class:      %bbapp.securitycontext.class%
        arguments:  ["@bbapp"]

    security.acl_loader_yml:
        class:      BackBuilder\Security\Acl\Loader\YmlLoader
        calls:
            - [setContainer, ['@service_container']]
    security.acl_manager:
        class:      BackBuilder\Security\Acl\AclManager
        arguments:  ["@security.context"]

    controller:
        class:      %bbapp.controller.class%
        arguments:  ["@bbapp"]
    renderer:
        class:      %bbapp.renderer.class%
        arguments:  ["@bbapp"]
        tags:
            - { name: "dumpable", dispatch_event: false }
    rpcserver:
        class:      %bbapp.rpcserver.class%
        arguments:  ["@bbapp"]
    uploadserver:
        class:      %bbapp.uploadserver.class%
        arguments:  ["@bbapp"]
    rewriting.urlgenerator:
        class:      %bbapp.urlgenerator.class%
        arguments:  ["@bbapp"]
    translator:
        class:      %bbapp.translator.class%
        arguments:  ["@bbapp", "%bbapp.locale%"]
        calls:
            - [setLocale, ["%bbapp.locale%"]]
    routing:
        class:      %bbapp.routing.class%
        arguments:  ["@bbapp"]
    pagebuilder:
        class:      %bbapp.pagebuilder.class%
        arguments:  ["@em"]
    registry:
        class:      %bbapp.registry.class%
    autoloader:
        class:      %bbapp.autoloader.class%
        arguments:  ["@bbapp"]
        tags:
            - { name: "dumpable", dispatch_event: false }
    keywordbuilder:
        class:      %bbapp.keywordbuilder.class%
        arguments:  ["@em"]

    bundle.loader:
        class:      %bbapp.bundle.loader.class%
        arguments:  ["@bbapp"]

    config.configurator:
        class:      %bbapp.config.configurator.class%
        arguments:  ["@bbapp"]
        public:     false

    config.persistor:
        class:      %bbapp.config.persistor.class%
        arguments:  ["@bbapp", "@config.configurator"]

    analytics:
        class: BackBuilder\Application\Analytics
        arguments:  [@bbapp]

    controller_resolver:
        class:      %bbapp.controller_resolver.class%
        arguments:  [@bbapp]

    rest.hydrator:
        class:      %bbapp.rest.hydrator.class%
        arguments:  ["@em"]

    rest.encoder_provider:
        class:      %bbapp.rest.encoder_provider.class%
        calls:
            - [setContainer, [@service_container]]
        arguments:  [{json: "rest.encoder.json", xml: "rest.encoder.xml"}]

    rest.encoder.json:
        class:      %bbapp.rest.encoder_json.class%

    rest.encoder.xml:
        class:      %bbapp.rest.encoder_xml.class%

    rest.listener.body:
        class:      %bbapp.rest.listener_body.class%
        arguments:  [@rest.encoder_provider, true]
        calls:
            - [setPath, [%bbapp.rest_api.path%]]

    rest.listener.exception:
        class:      %bbapp.rest.listener_exception.class%
        calls:
            - [setPath, [%bbapp.rest_api.path%]]
            - [setMapping, [%bbapp.rest.listener_exception.mapping%]]

    rest.listener.validation:
        class:      %bbapp.rest.listener_validation.class%
        arguments:  [@service_container]

    rest.metadata.annotation_reader:
        class: Doctrine\Common\Annotations\AnnotationReader

    rest.metadata.annotation_driver:
        class: BackBuilder\Rest\Mapping\Driver\AnnotationDriver
        arguments:  [@rest.metadata.annotation_reader]

    rest.metadata.factory:
        class: Metadata\MetadataFactory
        arguments:  [@rest.metadata.annotation_driver]
        calls:
            - [setCache, [@rest.metadata.cache]]

    rest.metadata.cache:
        class: BackBuilder\Rest\Metadata\Cache\FileCache
        arguments:  ["%bbapp.cache.dir%/"]

    rest.controller.test:
        class:      %bbapp.rest.test_controller.class%
        arguments:  ["@bbapp"]

    annotation_reader.cache:
        class: Doctrine\Common\Cache\ArrayCache

    annotation_reader:
        class: Doctrine\Common\Annotations\CachedReader
        arguments: [@annotation_reader_chained, @annotation_reader.cache]

    annotation_reader_chained:
        class: BackBuilder\Annotations\ChainAnnotationReader
        arguments: [[@annotation_reader.full, @annotation_reader.simple]]

    annotation_reader.simple:
        class: Doctrine\Common\Annotations\SimpleAnnotationReader
        calls:
            - [addNamespace, ['Doctrine\ORM\Mapping']]

    annotation_reader.full:
        class: Doctrine\Common\Annotations\AnnotationReader

    profiler.listener:
        class:      %bbapp.profiler.listener.class%
        arguments:  [@profiler]
        calls:
            - [setEnabled, [%debug%]]
        tags:
            - { name: kernel.event_subscriber }

    profiler.toolbar.listener:
        class:      %bbapp.toolbar.listener.class%
        arguments:  [%debug%]
        calls:
            - [setContainer, [@service_container]]

    profiler.storage:
        class:      BackBuilder\Profiler\FileProfilerStorage
        arguments:  [@bbapp, "file:%bbapp.cache.dir%/_profiler/"]


    profiler:
        class:      Symfony\Component\HttpKernel\Profiler\Profiler
        arguments:  [@profiler.storage, @logging]
        calls:
            - [set, [["@data_collector.config", "@data_collector.request", "@data_collector.exception", "@data_collector.events", "@data_collector.logger", "@data_collector.memory", "@data_collector.routing", @data_collector.doctrine]]]
            #"@data_collector.time",

    # data collectors
    data_collector.config:
        class: %bbapp.collector.config.class%
        calls:
            - [setKernel, [@?controller]]

    data_collector.request:
        class: %bbapp.collector.request.class%
        tags:
            - { name: kernel.event_subscriber }

    data_collector.exception:
        class: %bbapp.collector.exception.class%
        tags:

    data_collector.events:
        class: %bbapp.collector.events.class%
        tags:

    data_collector.logger:
        class: %bbapp.collector.logger.class%
        arguments:  [@logging]
        tags:
            - { name: monolog.logger,  channel: profiler }

    data_collector.time:
        class: %bbapp.collector.time.class%
        arguments:  [@?controller]
        tags:
            - { name: monolog.logger,  channel: profiler }

    data_collector.memory:
        class: %bbapp.collector.memory.class%

    data_collector.routing:
        class: %bbapp.collector.routing.class%
        calls:
            - [setContainer, [@service_container]]


    data_collector.doctrine:
        class: %bbapp.collector.doctrine.class%
        calls:
            - [setContainer, [@service_container]]

    doctrine.dbal.logger.profiling:
        class: %bbapp.dbal.logger.profiling.class%
        arguments:  ["@bbapp"]

    job.queue.nested_node:
        class: %bbapp.job.queue.registry.class%
        arguments:  ["NESTED_NODE"]
        calls:
            - [setEntityManager, [@em]]



    # validator
    validator:
        class: Symfony\Component\Validator\Validator
        arguments:  ["@validator.metadata_factory", "@validator.factory", "@translator"]

    validator.metadata_factory:
        class: Symfony\Component\Validator\Mapping\ClassMetadataFactory
        arguments:  ["@validator.loader_annotation"]

    validator.loader_annotation:
        class: Symfony\Component\Validator\Mapping\Loader\AnnotationLoader
        arguments:  ["@validator.annotation_reader"]

    validator.annotation_reader:
        class: Doctrine\Common\Annotations\CachedReader
        arguments: [@validator.annotation_reader.main, @validator.annotation_reader_cache]

    validator.annotation_reader.main:
        class: Doctrine\Common\Annotations\AnnotationReader

    validator.annotation_reader_cache:
        class: Doctrine\Common\Cache\FilesystemCache
        arguments:  ["%bbapp.cache.dir%", "validator.annotation.cache"]

    validator.factory:
        class: Symfony\Component\Validator\ConstraintValidatorFactory

    nestednode.page_listener:
        arguments:  [@bbapp]
        class: BackBuilder\Event\Listener\PageListener
    serializer:
        class: JMS\Serializer\Serializer
        arguments:
            - @serializer.metadata_factory
            - @serializer.handler_registry
            - @serializer.object_constructor
            - @serializer.serialization_visitor_map
            - @serializer.deserialization_visitor_map
            - @serializer.event_dispatcher

    serializer.serialization_visitor_map:
        class: PhpCollection\Map
        calls:
            - [set, [json, @serializer.json_serialization_visitor]]
    serializer.deserialization_visitor_map:
        class: PhpCollection\Map
        calls:
            - [set, [json, @serializer.json_deserialization_visitor]]


    serializer.metadata_factory:
        class: Metadata\MetadataFactory
        arguments:
            - @serializer.metadata.lazy_loading_driver
            - Metadata\ClassHierarchyMetadata
            - %debug%
        calls:
            - [setCache, [@serializer.metadata.cache]]

    serializer.handler_registry:
        class: JMS\Serializer\Handler\LazyHandlerRegistry
        arguments: [@service_container]

    serializer.object_constructor:
        class: BackBuilder\Serializer\Construction\DoctrineObjectConstructor
        arguments:
            - @doctrine
            - @serializer.object_fallback_constructor

    serializer.object_fallback_constructor:
        class: JMS\Serializer\Construction\UnserializeObjectConstructor

    serializer.json_serialization_visitor:
        class: JMS\Serializer\JsonSerializationVisitor
        arguments:
            - @serializer.naming_strategy
        calls:
            - [setOptions, [[]]]
    serializer.json_deserialization_visitor:
        class: JMS\Serializer\JsonDeserializationVisitor
        arguments:
            - @serializer.naming_strategy
            - @serializer.object_constructor
    serializer.event_dispatcher:
        class: JMS\Serializer\EventDispatcher\LazyEventDispatcher
        arguments: [@service_container]

    serializer.metadata.lazy_loading_driver:
        class: Metadata\Driver\LazyLoadingDriver
        arguments: [@service_container, serializer.metadata_driver]

    serializer.metadata_driver:
        class: JMS\Serializer\Metadata\Driver\DoctrineTypeDriver
        arguments: [@serializer.metadata_annotation_driver, @doctrine]

    serializer.metadata_annotation_driver:
        class: JMS\Serializer\Metadata\Driver\AnnotationDriver
        arguments: [@annotation_reader]

        #JMS\Serializer\Metadata\Driver

    serializer.metadata.cache:
        class: BackBuilder\Rest\Metadata\Cache\FileCache
        arguments:  ["%bbapp.cache.dir%/"]

    serializer.naming_strategy:
        class: BackBuilder\Serializer\Naming\DoctrinePropertyNamingStrategy
        arguments:  [@doctrine, @serializer.serialized_naming_strategy]

    serializer.serialized_naming_strategy:
        class: JMS\Serializer\Naming\SerializedNameAnnotationStrategy
        arguments:  [@serializer.camel_case_naming_strategy]

    serializer.camel_case_naming_strategy:
        class: JMS\Serializer\Naming\CamelCaseNamingStrategy

    serializer.doctrine_property_naming_strategy:
        class: BackBuilder\Serializer\Naming\DoctrinePropertyNamingStrategy
        arguments:  [@doctrine]

    # synthetic services
    bbapp:
        synthetic: true
        tags:
            - { name: "dumpable", dispatch_event: false }
    service_container:
        synthetic: true
    site:
        synthetic: true
    em:
        synthetic: true
    doctrine:
        synthetic: true
    bb_session:
        synthetic: true
    mailer:
        synthetic: true
