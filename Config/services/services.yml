parameters:
    # bbapp parameters, somes will be set at init of container by BBApplication
    bbapp.locale: 'fr_FR'
    translator.fallback: 'fr'

    # bbapp classes
    bbapp.cachebootstrap.class: BackBuilder\Cache\File\Cache
    bbapp.cachecontrol.class: BackBuilder\Cache\DAO\Cache
    bbapp.cache_listener.class: BackBuilder\Event\Listener\CacheListener
    bbapp.cache.query_params_strategy.manager.class: BackBuilder\Cache\QueryParamStrategyManager
    bbapp.config.class: BackBuilder\Config\Config
    bbapp.logger.class: BackBuilder\Logging\Logger
    bbapp.logger_debug.class: BackBuilder\Logging\DebugStackLogger
    bbapp.controller.class: BackBuilder\FrontController\FrontController
    bbapp.renderer.class: BackBuilder\Renderer\Renderer
    bbapp.ed.class: BackBuilder\Event\Dispatcher
    bbapp.rpcserver.class: BackBuilder\Services\Rpc\JsonRPCServer
    bbapp.uploadserver.class: BackBuilder\Services\Upload\UploadServer
    bbapp.urlgenerator.class: BackBuilder\Rewriting\UrlGenerator
    bbapp.translator.class: BackBuilder\Translation\Translator
    bbapp.pagebuilder.class: BackBuilder\NestedNode\Builder\PageBuilder
    bbapp.registry.class: Symfony\Component\HttpFoundation\ParameterBag
    bbapp.autoloader.class: BackBuilder\AutoLoader\AutoLoader
    bbapp.keywordbuilder.class: BackBuilder\NestedNode\Builder\KeywordBuilder
    bbapp.controller_resolver.class: BackBuilder\Controller\ControllerResolver
    bbapp.request.class: Symfony\Component\HttpFoundation\Request

    bbapp.script.command: php
    bbapp.console.command: bin/console.php

    bbapp.rest_api.path: /rest/

    bbapp.dbal.logger.profiling.class: BackBuilder\Logging\DebugStackLogger

    # data collectors
    bbapp.collector.config.class: BackBuilder\Profiler\DataCollector\ConfigDataCollector
    bbapp.collector.request.class: Symfony\Component\HttpKernel\DataCollector\RequestDataCollector
    bbapp.collector.exception.class: Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector
    bbapp.collector.events.class: Symfony\Component\HttpKernel\DataCollector\EventDataCollector
    bbapp.collector.logger.class: Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector
    bbapp.collector.time.class: Symfony\Component\HttpKernel\DataCollector\TimeDataCollector
    bbapp.collector.memory.class: Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector
    bbapp.collector.routing.class: BackBuilder\Profiler\DataCollector\RoutingDataCollector
    bbapp.collector.doctrine.class: BackBuilder\Profiler\DataCollector\DoctrineDataCollector

    bbapp.job.queue.registry.class: BackBuilder\Job\Queue\RegistryQueue

    data_collector.templates:
        config: "%bbapp.base.dir%/Resources/scripts/Collector/config.html.twig"
        request: "%bbapp.base.dir%/Resources/scripts/Collector/request.html.twig"
        exception: "%bbapp.base.dir%/Resources/scripts/Collector/exception.html.twig"
        events: "%bbapp.base.dir%/Resources/scripts/Collector/events.html.twig"
        logger: "%bbapp.base.dir%/Resources/scripts/Collector/logger.html.twig"
#        time: "%bbapp.base.dir%/Resources/scripts/Collector/time.html.twig"
        memory: "%bbapp.base.dir%/Resources/scripts/Collector/memory.html.twig"
        routing: "%bbapp.base.dir%/Resources/scripts/Collector/routing.html.twig"
        db: "%bbapp.base.dir%/Resources/scripts/Collector/db.html.twig"

    bbapp.analytics.class: BackBuilder\Application\Analytics

    config.yml_files_to_ignore: ['services', 'bootstrap']

    bbapp.config.configurator.class: BackBuilder\Config\Configurator
    bbapp.config.persistor.class: BackBuilder\Config\Persistor
    bbapp.bundle.loader.class: BackBuilder\Bundle\BundleLoader

    bbapp.expression_language.class: BackBuilder\Security\Authorization\ExpressionLanguage

services:
    cache.bootstrap:
        class:      %bbapp.cachebootstrap.class%
        arguments:  [{cachedir: "%bbapp.cache.dir%", cacheautogenerate: "%bbapp.cache.autogenerate%"}, "%bbapp.context%"]

    cache.control:
        class:      %bbapp.cachecontrol.class%
        arguments:  [{em: @em}, %bbapp.context%, @logging]

    cache.listener:
        class:      %bbapp.cache_listener.class%
        arguments:  [@bbapp]
        calls:
            - [setQParamsStrategyManager, [@cache.query_params_strategy.manager]]

    cache.query_params_strategy.manager:
        class:      %bbapp.cache.query_params_strategy.manager.class%
        public:     false

    config:
        class:      %bbapp.config.class%
        arguments:  ["%bbapp.base.dir%/Config", "@cache.bootstrap", null, "%debug%", "%config.yml_files_to_ignore%"]
        tags:
            - { name: "dumpable", dispatch_event: false }
        calls:
            - [setContainer, ['@service_container']]
            - [setEnvironment, ['%bbapp.environment%']]
        configurator: ["@config.configurator", configureApplicationConfig]

    event.dispatcher:
        class:      %bbapp.ed.class%
        arguments:  ["@bbapp", "@config"]
        tags:
            - { name: "dumpable", dispatch_event: false }
    ed:
        alias: event.dispatcher

    request:
        class: %bbapp.request.class%
        factory_class: %bbapp.request.class%
        factory_method: createFromGlobals

    controller:
        class:      %bbapp.controller.class%
        arguments:  ["@bbapp"]

    renderer:
        class:      %bbapp.renderer.class%
        arguments:  ["@bbapp"]
        tags:
            - { name: "dumpable", dispatch_event: false }
    rpcserver:
        class:      %bbapp.rpcserver.class%
        arguments:  ["@bbapp"]

    uploadserver:
        class:      %bbapp.uploadserver.class%
        arguments:  ["@bbapp"]

    rewriting.urlgenerator:
        class:      %bbapp.urlgenerator.class%
        arguments:  ["@bbapp"]

    translator:
        class:      %bbapp.translator.class%
        arguments:  ["@bbapp", "%bbapp.locale%"]
        calls:
            - [setLocale, ["%bbapp.locale%"]]

    pagebuilder:
        class:      %bbapp.pagebuilder.class%
        arguments:  ["@em"]

    registry:
        class:      %bbapp.registry.class%

    autoloader:
        class:      %bbapp.autoloader.class%
        arguments:  ["@bbapp"]
        calls:
            - [setEventDispatcher, ["@event.dispatcher"]]
        tags:
            - { name: "dumpable", dispatch_event: false }

    keywordbuilder:
        class:      %bbapp.keywordbuilder.class%
        arguments:  ["@em"]


    bundle.loader:
        class:      %bbapp.bundle.loader.class%
        arguments:  ["@bbapp"]


    config.configurator:
        class:      %bbapp.config.configurator.class%
        arguments:  ["@bbapp"]
        public:     false

    config.persistor:
        class:      %bbapp.config.persistor.class%
        arguments:  ["@bbapp", "@config.configurator"]

    analytics:
        class: BackBuilder\Application\Analytics
        arguments:  [@bbapp]

    doctrine.listener:
        class: BackBuilder\Event\Listener\DoctrineListener
        arguments: [@bbapp]

    controller_resolver:
        class:      %bbapp.controller_resolver.class%
        arguments:  [@bbapp]

    bb.expression_language:
        class: %bbapp.expression_language.class%

    annotation_reader.cache:
        class: Doctrine\Common\Cache\ArrayCache

    annotation_reader:
        class: Doctrine\Common\Annotations\CachedReader
        arguments: [@annotation_reader_chained, @annotation_reader.cache]

    annotation_reader_chained:
        class: BackBuilder\Annotations\ChainAnnotationReader
        arguments: [[@annotation_reader.full, @annotation_reader.simple]]

    annotation_reader.simple:
        class: Doctrine\Common\Annotations\SimpleAnnotationReader
        calls:
            - [addNamespace, ['Doctrine\ORM\Mapping']]

    annotation_reader.full:
        class: Doctrine\Common\Annotations\AnnotationReader

    # data collectors
    data_collector.config:
        class: %bbapp.collector.config.class%
        calls:
            - [setKernel, [@?controller]]

    data_collector.request:
        class: %bbapp.collector.request.class%
        tags:
            - { name: kernel.event_subscriber }

    data_collector.exception:
        class: %bbapp.collector.exception.class%
        tags:

    data_collector.events:
        class: %bbapp.collector.events.class%
        tags:

    data_collector.logger:
        class: %bbapp.collector.logger.class%
        arguments:  [@logging]
        tags:
            - { name: monolog.logger,  channel: profiler }

    data_collector.time:
        class: %bbapp.collector.time.class%
        arguments:  [@?controller]
        tags:
            - { name: monolog.logger,  channel: profiler }

    data_collector.memory:
        class: %bbapp.collector.memory.class%

    data_collector.routing:
        class: %bbapp.collector.routing.class%
        calls:
            - [setContainer, [@service_container]]


    data_collector.doctrine:
        class: %bbapp.collector.doctrine.class%
        calls:
            - [setContainer, [@service_container]]

    doctrine.dbal.logger.profiling:
        class: %bbapp.dbal.logger.profiling.class%
        arguments:  ["@bbapp"]

    job.queue.nested_node:
        class: %bbapp.job.queue.registry.class%
        arguments:  ["NESTED_NODE"]
        calls:
            - [setEntityManager, [@em]]

    doctrine.connection.default:
        class: Doctrine\DBAL\Connection
        factory_service: em
        factory_method: getConnection

    doctrine:
        class: BackBuilder\Doctrine\Registry
        arguments:
            - @service_container
            - {default: @doctrine.connection.default}
            - {default: em}
            - default
            - default

    # validator
    validator:
        class: Symfony\Component\Validator\Validator
        arguments:  ["@validator.metadata_factory", "@validator.factory", "@translator"]

    validator.metadata_factory:
        class: Symfony\Component\Validator\Mapping\ClassMetadataFactory
        arguments:  ["@validator.loader_annotation"]

    validator.loader_annotation:
        class: Symfony\Component\Validator\Mapping\Loader\AnnotationLoader
        arguments:  ["@validator.annotation_reader"]

    validator.annotation_reader:
        class: Doctrine\Common\Annotations\CachedReader
        arguments: [@validator.annotation_reader.main, @validator.annotation_reader_cache]

    validator.annotation_reader.main:
        class: Doctrine\Common\Annotations\AnnotationReader

    validator.annotation_reader_cache:
        class: Doctrine\Common\Cache\FilesystemCache
        arguments:  ["%bbapp.cache.dir%", "validator.annotation.cache"]

    validator.factory:
        class: Symfony\Component\Validator\ConstraintValidatorFactory

    nestednode.page_listener:
        arguments:  [@bbapp]
        class: BackBuilder\Event\Listener\PageListener

    array.validator:
        class: BackBuilder\Validator\ArrayValidator

    entity.validator:
        class: BackBuilder\Validator\EntityValidator
        arguments: ["@em"]
